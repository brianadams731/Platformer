var N=Object.defineProperty;var z=(o,t,e)=>t in o?N(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var r=(o,t,e)=>(z(o,typeof t!="symbol"?t+"":t,e),e);import{A as p,S as l,T,a as _,h as M,L as g,s as K}from"./vendor.60bd8746.js";const O=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const h of n.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&i(h)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerpolicy&&(n.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?n.credentials="include":s.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}};O();function A(o,t){o.collisionProperties.includes("player")&&(o.width=o.width-60,o.x=o.x+30);const e={collided:!1,topCollided:!1,bottomCollided:!1,leftCollided:!1,rightCollided:!1,collider:t};if(o.x+o.width+5<t.x||o.x>t.x+t.width+5)return e;const i=.5*(o.width+t.width),s=.5*(o.height+t.height),n=t.x+t.width/2-(o.x+o.width/2),h=t.y+t.height/2-(o.y+o.height/2);if(Math.abs(n)<=i&&Math.abs(h)<=s){e.collided=!0;const a=i*h*1.5,u=s*n;a>u?a>-u?o.x+o.width>t.x+1&&o.x<t.x+t.width-1&&(e.bottomCollided=!0):e.leftCollided=!0:a>-u?e.rightCollided=!0:o.x+o.width>t.x+1&&o.x<t.x+t.width-1&&(e.topCollided=!0)}return e}function k(o,t){return{collided:o.collided,topCollided:o.bottomCollided,bottomCollided:o.topCollided,leftCollided:o.rightCollided,rightCollided:o.leftCollided,collider:t}}const $=function(o,t,e){const i=o.stage.pivot.y,s=t.getCollisionData().y+t.getCollisionData().height/2;let n=i;return s>=i+120?n=i+16:s>i+95?n=i+10:s>i+60?n=i+6:s>i+40?n=i+2:s<i-230?n=i-14:s<i-150?n=i-10:s<i-94?n=i-4:s<i-80&&(n=i-2),n+o.screen.height/2>e-160&&(n=e-160-o.screen.height/2),n},Q=function(o){return o.getCollisionData().x+o.getCollisionData().width/2};function Z(o){o.ticker.maxFPS=60,o.stage.position.x=o.renderer.width/2,o.stage.position.y=o.renderer.height/2,document.body.appendChild(o.view),window.addEventListener("resize",function(){o.resizeTo=this.window,o.stage.position.x=o.renderer.width/2,o.stage.position.y=o.renderer.height/2})}class E{constructor(t){r(this,"character");this.character=t}getShouldRemove(){return this.character.getShouldRemove()}removeFromStage(t){this.character.removeFromStage(t)}update(){this.character.update()}draw(t){this.character.draw(t)}pushToColliderArray(t){this.character.pushToColliderArray(t)}getCollisionData(){return this.character.getCollisionData()}getPosition(){return this.character.getPosition()}moveRight(){this.character.moveRight()}moveLeft(){this.character.moveLeft()}jump(){this.character.jump()}}class t0{constructor(){r(this,"canMoveRight");r(this,"canMoveLeft");r(this,"canMoveUp");r(this,"canMoveDown");this.canMoveUp=!0,this.canMoveRight=!0,this.canMoveDown=!0,this.canMoveLeft=!0}normalizeX(t,e){return t>0&&this.canMoveRight||t<0&&this.canMoveLeft?e+t:e}normalizeY(t,e){return t>0&&this.canMoveDown||t<0&&this.canMoveUp?e+t:e}setCanMoveDown(t){this.canMoveDown=t}collisionWithSolid(t){!t.collided||(this.canMoveUp=t.topCollided?!1:this.canMoveUp,this.canMoveRight=t.rightCollided?!1:this.canMoveRight,this.canMoveLeft=t.leftCollided?!1:this.canMoveLeft,this.canMoveDown=t.bottomCollided?!1:this.canMoveDown)}getCanMoveLeft(){return this.canMoveLeft}getCanMoveRight(){return this.canMoveRight}getCanMoveUp(){return this.canMoveUp}getCanMoveDown(){return this.canMoveDown}reset(){this.canMoveDown=!0,this.canMoveUp=!0,this.canMoveLeft=!0,this.canMoveRight=!0}}class e0{constructor(t){r(this,"xVelocity");r(this,"yVelocity");r(this,"maxXVelocity");r(this,"maxYVelocity");r(this,"friction");r(this,"gravity");this.xVelocity=0,this.yVelocity=0,this.maxXVelocity=t,this.maxYVelocity=14,this.friction=.6,this.gravity=1}addToXVelocity(t){const e=this.xVelocity+t;e>0?this.xVelocity=Math.min(e,this.maxXVelocity):e<0?this.xVelocity=Math.max(e,-this.maxXVelocity):this.xVelocity=0}addToYVelocity(t){const e=this.yVelocity+t;e>0?this.yVelocity=Math.min(e,this.maxYVelocity):e<0?this.yVelocity=e:this.yVelocity=0}jumpYVelocity(t){this.yVelocity=-t}getXVelocity(){return this.xVelocity}getYVelocity(){return this.yVelocity}update(t,e,i,s){this.xVelocity>0?this.xVelocity=Math.max(this.xVelocity-this.friction,0):this.xVelocity<0&&(this.xVelocity=Math.min(this.xVelocity+this.friction,0)),this.addToYVelocity(this.gravity),t||(this.xVelocity=Math.min(this.xVelocity,0)),e||(this.xVelocity=Math.max(this.xVelocity,0)),i||(this.yVelocity=Math.max(this.yVelocity,0)),s||(this.yVelocity=Math.min(this.yVelocity,0))}}class i0{constructor(t,e,i){r(this,"moveConstraints");r(this,"velocity");r(this,"horizontalSpeed");r(this,"jumpHeight");r(this,"canJump");this.moveConstraints=new t0,this.velocity=new e0(t),this.horizontalSpeed=e,this.jumpHeight=i,this.canJump=!0}moveRight(){this.velocity.addToXVelocity(this.horizontalSpeed)}moveLeft(){this.velocity.addToXVelocity(-this.horizontalSpeed)}pushBack(){this.velocity.addToXVelocity(-100)}pushForward(){this.velocity.addToXVelocity(100)}jump(){this.canJump&&(this.velocity.jumpYVelocity(this.jumpHeight),this.canJump=!1)}jumpSpring(){this.velocity.jumpYVelocity(this.jumpHeight*1.1),this.canJump=!1}isOnSurface(t){this.moveConstraints.setCanMoveDown(!t)}updateX(t){return this.moveConstraints.normalizeX(this.velocity.getXVelocity(),t)}updateY(t){return this.moveConstraints.normalizeY(this.velocity.getYVelocity(),t)}collisionWithSolid(t){this.moveConstraints.collisionWithSolid(t)}resetMoveConstraints(){this.moveConstraints.reset()}isXVelocityPositive(){return this.velocity.getXVelocity()>=0}getXVelocity(){return this.velocity.getXVelocity()}getYVelocity(){return this.velocity.getYVelocity()}update(){this.moveConstraints.getCanMoveDown()||(this.canJump=!0),this.velocity.update(this.moveConstraints.getCanMoveRight(),this.moveConstraints.getCanMoveLeft(),this.moveConstraints.getCanMoveUp(),this.moveConstraints.getCanMoveDown())}}class s0{constructor(t){r(this,"canTakeDamage");r(this,"hp");this.hp=t,this.canTakeDamage=!0}getHp(){return this.hp}getIsDead(){return this.hp<1}takeDamage(){!this.canTakeDamage||(this.hp--,this.getIsDead()||this.damageTimeOut())}damageTimeOut(){this.canTakeDamage=!1,setTimeout(()=>{this.canTakeDamage=!0},500)}}class B{constructor(t,e,i,s,n,h){r(this,"character");r(this,"animationManager");r(this,"moves");r(this,"health");r(this,"x");r(this,"y");r(this,"shouldRemove");r(this,"collisionArray");r(this,"collisionProperties");this.moves=new i0(i,s,n),this.x=t,this.y=e,this.shouldRemove=!1,this.collisionArray=[],this.collisionProperties=[],this.animationManager=h,this.character=this.animationManager.initCharacter(),this.character.scale.x=2,this.character.scale.y=2,this.character.play(),this.character.animationSpeed=.16,this.health=new s0(1)}update(){if(this.health.getIsDead()){this.collisionProperties=[],this.animationManager.startDeathAnimation(),this.animationManager.character.x=this.x,this.animationManager.character.y=this.y,this.animationManager.getDeathAnimationCompleted()&&(this.shouldRemove=!0);return}this.getY()>1e3&&(this.shouldRemove=!0),this.moves.resetMoveConstraints(),this.resolveCollisions(),this.moves.update(),this.x=this.moves.updateX(this.x),this.y=this.moves.updateY(this.y),this.character.x=this.x,this.character.y=this.y,this.animationManager.update(this.moves),this.animationManager.character.x=this.x,this.animationManager.character.y=this.y}draw(t){t.stage.addChild(this.animationManager.character)}removeFromStage(t){t.stage.removeChild(this.animationManager.character)}moveRight(){this.moves.moveRight()}moveLeft(){this.moves.moveLeft()}jump(){this.moves.jump()}getX(){return this.x}getY(){return this.y}getShouldRemove(){return this.shouldRemove}resetMovement(){this.moves.resetMoveConstraints()}collisionWithSolid(t){this.moves.collisionWithSolid(t),t.bottomCollided&&(this.y=t.collider.y-this.character.height),t.topCollided&&(this.y=t.collider.y+t.collider.height),t.leftCollided&&(this.collisionProperties.includes("player")?this.x=t.collider.x+t.collider.width-30:this.x=t.collider.x+t.collider.width),t.rightCollided&&(this.collisionProperties.includes("player")?this.x=t.collider.x-this.character.width+30:this.x=t.collider.x-this.character.width)}collisionWithSpring(){this.moves.jumpSpring()}collisionWithPlayer(t){t.topCollided&&this.health.takeDamage()}collisionWithEnemy(t){if(t.bottomCollided){this.moves.jumpSpring();return}t.leftCollided?this.moves.pushForward():t.rightCollided&&this.moves.pushBack(),this.health.takeDamage()}pushToColliderArray(t){this.collisionArray.push(t)}getCollisionData(){return{x:this.character.x,y:this.character.y,height:this.character.height,width:this.character.width,collisionProperties:this.collisionProperties}}setCollisionProperties(t){this.collisionProperties=t}getPosition(){return this.animationManager.getPosition()}}class F{constructor(t,e,i,s,n,h,a,u){r(this,"spritesheet");r(this,"character");r(this,"idle");r(this,"run");r(this,"jump");r(this,"fall");r(this,"death");r(this,"currentAnimation");r(this,"facingRight");r(this,"deathAnimationComplete");this.spritesheet=t,this.idle=e,this.run=i,this.jump=s,this.fall=n,this.death=h,this.currentAnimation="",this.deathAnimationComplete=!1,this.facingRight=!0,this.character=new p(this.spritesheet.animations[this.idle]),this.character.x=a,this.character.y=u,this.animationDefault()}initCharacter(){return new p(this.spritesheet.animations[this.idle])}update(t){t.getYVelocity()<0?this.startJumpAnimation():t.getYVelocity()>6?this.startFallAnimation():t.getXVelocity()<0||t.getXVelocity()>0?this.startRunAnimation():this.startIdleAnimation(),t.getXVelocity()>0?this.facingRight=!0:t.getXVelocity()<0&&(this.facingRight=!1),this.position()}position(){this.facingRight?(this.character.pivot.x=0,this.character.scale.x=2):(this.character.pivot.x=this.character.width/2,this.character.scale.x=-2)}animationDefault(){this.character.animationSpeed=.1,this.character.play(),this.character.scale.y=2}startIdleAnimation(){this.currentAnimation!=="idle"&&(this.currentAnimation="idle",this.character.destroy(),this.character=new p(this.spritesheet.animations[this.idle]),this.position(),this.animationDefault())}startRunAnimation(){this.currentAnimation!=="run"&&(this.currentAnimation="run",this.character.destroy(),this.character=new p(this.spritesheet.animations[this.run]),this.position(),this.animationDefault(),this.character.animationSpeed=.16)}startJumpAnimation(){this.currentAnimation!=="jump"&&(this.currentAnimation="jump",this.character.destroy(),this.character=new p(this.spritesheet.animations[this.jump]),this.position(),this.animationDefault(),this.character.loop=!1)}startFallAnimation(){this.currentAnimation!=="fall"&&(this.currentAnimation="fall",this.character.destroy(),this.character=new p(this.spritesheet.animations[this.fall]),this.position(),this.animationDefault())}startDeathAnimation(){this.currentAnimation!=="death"&&(this.currentAnimation="death",this.character.destroy(),this.character=new p(this.spritesheet.animations[this.death]),this.position(),this.animationDefault(),this.character.loop=!1,this.character.onComplete=()=>{this.deathAnimationComplete=!0})}getDeathAnimationCompleted(){return this.deathAnimationComplete}getPosition(){return{x:this.character.x,y:this.character.y,width:this.character.width,height:this.character.height}}}class D extends B{constructor(t,e,i){super(e,i,10,1,21,new F(t.getGhost(),"ghost-idel","ghost-run","ghost-jump","ghost-fall","ghost-death",e,i));r(this,"reachedGoal");r(this,"score");this.setCollisionProperties(["player","solid"]),this.reachedGoal=!1,this.score=0}update(){super.update()}resolveCollisions(){for(let t=this.collisionArray.length-1;t>=0;t--)this.collisionArray[t].collider.collisionProperties.includes("solid")&&this.collisionWithSolid(this.collisionArray[t]),this.collisionArray[t].collider.collisionProperties.includes("spring")&&this.collisionWithSpring(),this.collisionArray[t].collider.collisionProperties.includes("enemy")&&(this.collisionWithEnemy(this.collisionArray[t]),this.collisionArray[t].bottomCollided&&(this.score+=100)),this.collisionArray[t].collider.collisionProperties.includes("damage")&&this.health.takeDamage(),this.collisionArray[t].collider.collisionProperties.includes("goal")&&(this.reachedGoal=!0),this.collisionArray[t].collider.collisionProperties.includes("coin")&&(this.score+=100),this.collisionArray.splice(t,1)}}class o0{constructor(){r(this,"upPressed");r(this,"downPressed");r(this,"leftPressed");r(this,"rightPressed");this.upPressed=!1,this.downPressed=!1,this.leftPressed=!1,this.rightPressed=!1,document.addEventListener("keydown",t=>{this.handleKeyDown(t)}),document.addEventListener("keyup",t=>{this.handleKeyUp(t)})}handleKeyDown(t){(t.key==="w"||t.key===" ")&&(this.upPressed=!0),t.key==="d"&&(this.rightPressed=!0),t.key==="a"&&(this.leftPressed=!0),t.key==="s"&&(this.downPressed=!0)}handleKeyUp(t){(t.key==="w"||t.key===" ")&&(this.upPressed=!1),t.key==="d"&&(this.rightPressed=!1),t.key==="a"&&(this.leftPressed=!1),t.key==="s"&&(this.downPressed=!1)}getRightPressed(){return this.rightPressed}getLeftPressed(){return this.leftPressed}getUpPressed(){return this.upPressed}getDownPressed(){return this.downPressed}}class r0 extends E{constructor(t,e,i){super(new D(t,e,i));r(this,"inputController");this.inputController=new o0}update(){this.useInput(),this.character.update()}useInput(){this.inputController.getRightPressed()&&this.moveRight(),this.inputController.getLeftPressed()&&this.moveLeft(),this.inputController.getUpPressed()&&this.jump()}getScore(){return this.character instanceof D?this.character.score:0}getReachedGoal(){return this.character instanceof D?this.character.reachedGoal:!1}}class b{constructor(t,e){r(this,"x");r(this,"y");r(this,"shouldRemove");r(this,"collisionProperties");r(this,"collisionArray");this.x=t,this.y=e,this.shouldRemove=!1,this.collisionProperties=[],this.collisionArray=[]}pushToColliderArray(t){this.collisionArray.push(t)}flagToRemove(){this.shouldRemove=!0}getShouldRemove(){return this.shouldRemove}}const v={GRAVITY:10,foregroundScale:2,playerScale:2};class j extends b{constructor(t,e,i,s){super(t,e);r(this,"spriteSheet");r(this,"foreground");this.spriteSheet=i,this.foreground=s,this.foreground.scale.x=v.foregroundScale,this.foreground.scale.y=v.foregroundScale,this.foreground.x=this.x,this.foreground.y=this.y}update(){}draw(t){t.stage.addChild(this.foreground)}removeFromStage(t){t.stage.removeChild(this.foreground)}getCollisionData(){return{x:this.foreground.x,y:this.foreground.y,height:this.foreground.height,width:this.foreground.width,collisionProperties:this.collisionProperties}}}class n0 extends j{constructor(t,e,i){super(t,e,i.getCoin(),new p(i.getCoin().animations.coin));this.foreground.play(),this.collisionProperties=["coin"],this.foreground.animationSpeed=.12}update(){super.update();for(let t=0;t<this.collisionArray.length;t++)this.collisionArray[t].collider.collisionProperties.includes("player")&&this.flagToRemove()}}class m extends b{constructor(t,e,i){super(t,e);r(this,"foreground");this.foreground=i,this.foreground.scale.x=v.foregroundScale,this.foreground.scale.y=v.foregroundScale,this.foreground.x=this.x,this.foreground.y=this.y}update(){}draw(t){t.stage.addChild(this.foreground)}removeFromStage(t){t.stage.removeChild(this.foreground)}getCollisionData(){return{x:this.foreground.x,y:this.foreground.y,height:this.foreground.height,width:this.foreground.width,collisionProperties:this.collisionProperties}}}class h0 extends m{constructor(t,e,i){super(t,e,new l(i.getCave().textures["cave-107.png"]));this.collisionProperties=["solid","damage"]}}class a0 extends m{constructor(t,e,i){super(t,e,new l(T.WHITE));this.foreground.height=32,this.foreground.width=32,this.foreground.alpha=.5,this.foreground.tint=620905,this.collisionProperties=["goal"]}}class l0 extends m{constructor(t,e,i){super(t,e,new l(i.getEarth().textures["grassTopMid.png"]));this.collisionProperties=["solid"]}}class c0 extends m{constructor(t,e,i){super(t,e,new l(i.getEarth().textures["groundRight.png"]));this.collisionProperties=["solid"]}}class d0 extends m{constructor(t,e,i){super(t,e,new l(i.getEarth().textures["groundLeft.png"]));this.collisionProperties=["solid"]}}class u0 extends m{constructor(t,e,i){super(t,e,new l(i.getEarth().textures["grassTopRight.png"]));this.collisionProperties=["solid"]}}class g0 extends m{constructor(t,e,i){super(t,e,new l(i.getEarth().textures["grassTopLeft.png"]));this.collisionProperties=["solid"]}}class f0{constructor(t,e){r(this,"foregrounds");r(this,"foregroundsFiller");this.foregrounds=[],this.foregroundsFiller=[],this.parseMapMatrix(t,e)}pushNewForeground(t){this.foregrounds.push(t)}update(t){for(let e=this.foregrounds.length-1;e>=0;e--)this.foregrounds[e].update(),this.foregrounds[e].getShouldRemove()&&(this.foregrounds[e].removeFromStage(t),this.foregrounds.splice(e,1))}staticDraw(t){for(let e=0;e<this.foregrounds.length;e++)this.foregrounds[e]instanceof m&&this.foregrounds[e].draw(t);this.foregroundsFiller.forEach(e=>{e.draw(t)})}animatedDraw(t){for(let e=0;e<this.foregrounds.length;e++)this.foregrounds[e]instanceof j&&this.foregrounds[e].draw(t)}getForeground(){return this.foregrounds}parseMapMatrix(t,e){for(let i=0;i<e.length;i++)for(let s=0;s<e[i].length;s++)e[i][s]===1?this.foregrounds.push(new l0(i*32,s*32,t)):e[i][s]===2?this.foregrounds.push(new n0(i*32,s*32,t)):e[i][s]===3?this.foregrounds.push(new h0(i*32,s*32,t)):e[i][s]===5?this.foregrounds.push(new a0(i*32,s*32,t)):e[i][s]===21?this.foregrounds.push(new c0(i*32,s*32,t)):e[i][s]===22?this.foregrounds.push(new d0(i*32,s*32,t)):e[i][s]===23?this.foregrounds.push(new g0(i*32,s*32,t)):e[i][s]===24&&this.foregrounds.push(new u0(i*32,s*32,t))}}class X extends B{constructor(t,e,i,s,n,h){super(t,e,i,s,n,h);r(this,"shouldMoveleft");r(this,"shouldMoveRight");r(this,"shouldJump");this.shouldMoveleft=!1,this.shouldMoveRight=!1,this.shouldJump=!1,this.collisionProperties.push("enemy")}setShouldMoveLeft(t){this.shouldMoveleft=t}setShouldMoveRight(t){this.shouldMoveRight=t}setShouldJump(t){this.shouldJump=t}getShouldMoveLeft(){return this.shouldMoveleft}getShouldMoveRight(){return this.shouldMoveRight}getShouldJump(){return this.shouldJump}update(){super.update(),this.shouldMoveleft?this.moveLeft():this.shouldMoveRight&&this.moveRight(),this.shouldJump&&(this.jump(),this.shouldJump=!1)}followPlayer(t){if(this.getPosition().y>t.y+500||this.getPosition().y<t.y-500)return;const e=this.getPosition().width/2,i=t.width/2;t.x+i<this.getPosition().x+e?(this.setShouldMoveLeft(!0),this.setShouldMoveRight(!1)):t.x+i>this.getPosition().x+e?(this.setShouldMoveLeft(!1),this.setShouldMoveRight(!0)):(this.setShouldMoveLeft(!1),this.setShouldMoveRight(!1))}resolveCollisions(){for(let t=this.collisionArray.length-1;t>=0;t--)this.collisionArray[t].collider.collisionProperties.includes("solid")&&!this.collisionArray[t].collider.collisionProperties.includes("player")&&(this.collisionWithSolid(this.collisionArray[t]),(this.collisionArray[t].leftCollided||this.collisionArray[t].rightCollided)&&this.setShouldJump(!0)),this.collisionArray[t].collider.collisionProperties.includes("spring")&&this.moves.jumpSpring(),this.collisionArray[t].collider.collisionProperties.includes("player")&&(this.collisionWithPlayer(this.collisionArray[t]),this.setShouldJump(!1)),this.collisionArray.splice(t,1)}}class p0 extends X{constructor(t,e,i){super(e,i,5,1,20,new F(t.getMushroom(),"mushroom-idel","mushroom-run","mushroom-idel","mushroom-idel","mushroom-death",e,i))}}class G extends E{constructor(t,e,i){super(new p0(t,e,i))}followPlayer(t){this.character instanceof X&&this.character.followPlayer(t)}update(){this.character.update()}}class m0{constructor(t,e){r(this,"controllers");this.controllers=[],this.parseMapMatrix(t,e)}draw(t){for(let e=0;e<this.controllers.length;e++)this.controllers[e].draw(t)}update(t,e){for(let i=this.controllers.length-1;i>=0;i--){let s=this.controllers[i];s instanceof G&&s.followPlayer(e),s.update(),s.getShouldRemove()&&(s.removeFromStage(t),this.controllers.splice(i,1))}}pushNewEnemyController(t){this.controllers.push(t)}getControllers(){return this.controllers}parseMapMatrix(t,e){for(let i=0;i<e.length;i++)for(let s=0;s<e[i].length;s++)e[i][s]===4&&this.controllers.push(new G(t,i*32,s*32))}}const Y=(o,t,e,i,s)=>{var h;const n=document.createElement("div");n.innerHTML=`
        <div class="gameOverWrapper">
            <div class="textBox">
                ${o?'<h1 class="win">You Win</h1>':'<h1 class="lose">Game Over</h1>'}
                <h3>Score: ${t}</h3>
            </div>
            <button id="restartBtn" class="arcadeBtn">Restart</button>
        </div>
    `,n.querySelector("#restartBtn").addEventListener("click",()=>{s(e,i),n.querySelector("#restartBtn").disabled=!0,n.querySelector("#restartBtn").classList.add("remove-hover-pointer"),n.querySelector(".gameOverWrapper").style.animationName="fadeOut"}),n.querySelector(".gameOverWrapper").addEventListener("animationend",a=>{a.animationName==="fadeOut"&&n.remove()}),(h=document.querySelector("body"))==null||h.appendChild(n)},w=[[0,0,0,0,0,0,0,0,0,0,0,0,0,23,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,100,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,104,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,103,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,24,21,21,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,101,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,23,22,22,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,3,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,3,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,102,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,24,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,24,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,4,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,24,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,22,122,122,122,122,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,21,21,21,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,23,22,22,22,120,22,22,22,22,22,22,22,22,22,22,22,22,120,22,22,22,22,22,22,120,120,0,0,0,0,0],[0,0,4,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,2,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,1,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,24,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,121,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,22,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,120,120,120,120,120,120,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,21,21,21,21,21,21,21,120,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,120,0,0,0,0,0]];class S{constructor(t,e,i){r(this,"sprite");r(this,"offset");r(this,"multiplyer");this.sprite=t,this.offset=e,this.multiplyer=i}setX(t){this.sprite.x=t}updatePosition(t){this.sprite.x=t*this.multiplyer+this.offset}getSprite(){return this.sprite}}class y0{constructor(t,e,i){r(this,"clouds");r(this,"mountains");r(this,"treeBack");r(this,"treeFront");this.clouds=[],this.mountains=[],this.treeBack=[],this.treeFront=[];const s=Math.ceil(t/4128);for(let n=-1;n<s;n++)this.pushCloud(n*4128,e,i),this.pushMountain(n*4128,e,i),this.pushTreeBack(n*4128,e,i),this.pushTreeFront(n*4128,e,i)}update(t){this.clouds.forEach(e=>{e.updatePosition(t.x)}),this.mountains.forEach(e=>{e.updatePosition(t.x)}),this.treeBack.forEach(e=>{e.updatePosition(t.x)}),this.treeFront.forEach(e=>{e.updatePosition(t.x)})}draw(t){this.clouds.forEach(e=>{t.stage.addChild(e.getSprite())}),this.mountains.forEach(e=>{t.stage.addChild(e.getSprite())}),this.treeBack.forEach(e=>{t.stage.addChild(e.getSprite())}),this.treeFront.forEach(e=>{t.stage.addChild(e.getSprite())})}pushCloud(t,e,i){const s=new l(i.getSkybox().textures["cloud.png"]);s.scale.x=3,s.scale.y=3,s.x=t,s.y=e-s.height*3,this.clouds.push(new S(s,t,.95))}pushMountain(t,e,i){const s=new l(i.getSkybox().textures["mountain2.png"]);s.scale.x=3,s.scale.y=3,s.x=t,s.y=e-s.height*2.1,console.log(s.width),this.mountains.push(new S(s,t,.9))}pushTreeBack(t,e,i){const s=new l(i.getSkybox().textures["pine2.png"]);s.scale.x=3,s.scale.y=3,s.x=t,s.y=e-s.height*1.15,this.treeBack.push(new S(s,t,.5))}pushTreeFront(t,e,i){const s=new l(i.getSkybox().textures["pine1.png"]);s.scale.x=3,s.scale.y=3,s.x=t,s.y=e-s.height+20,this.treeFront.push(new S(s,t,.2))}}class C{constructor(t,e,i){r(this,"sprite");this.sprite=t,this.sprite.x=e,this.sprite.scale.x=3,this.sprite.scale.y=3,this.sprite.anchor.x=.5,this.sprite.anchor.y=1,this.sprite.y=i+32}draw(t){t.stage.addChild(this.sprite)}}class v0 extends C{constructor(t,e,i){super(new l(t.getDecoration().textures["tree.png"]),e,i)}}class w0 extends C{constructor(t,e,i){super(new l(t.getDecoration().textures["bush_2.png"]),e,i)}}class C0 extends C{constructor(t,e,i){super(new l(t.getDecoration().textures["bush_1.png"]),e,i)}}class x0 extends C{constructor(t,e,i){super(new l(t.getDecoration().textures["rock_1.png"]),e,i)}}class S0 extends C{constructor(t,e,i){super(new l(t.getDecoration().textures["rock_2.png"]),e,i)}}class R{constructor(t,e,i){r(this,"sprite");this.sprite=t,this.sprite.scale.x=v.foregroundScale,this.sprite.scale.y=v.foregroundScale,this.sprite.x=e,this.sprite.y=i}draw(t){t.stage.addChild(this.sprite)}}class P0 extends R{constructor(t,e,i){super(new l(T.WHITE),e,i);this.sprite.height=32,this.sprite.width=32,this.sprite.tint=2497818}}class M0 extends R{constructor(t,e,i){super(new l(t.getEarth().textures["groundRight.png"]),e,i)}}class A0 extends R{constructor(t,e,i){super(new l(t.getEarth().textures["groundLeft.png"]),e,i)}}class k0{constructor(t,e,i,s){r(this,"background");r(this,"decoration");r(this,"skyBox");this.background=[],this.decoration=[],this.skyBox=new y0(t,e,i),this.parseBackgroundMatrix(i,s),this.parseDecorationMatrix(i,s)}parseBackgroundMatrix(t,e){for(let i=0;i<e.length;i++)for(let s=0;s<e[i].length;s++)e[i][s]===120?this.background.push(new P0(t,i*32,s*32)):e[i][s]===121?this.background.push(new M0(t,i*32,s*32)):e[i][s]===122&&this.background.push(new A0(t,i*32,s*32))}parseDecorationMatrix(t,e){for(let i=0;i<e.length;i++)for(let s=0;s<e[i].length;s++)e[i][s]==100?this.decoration.push(new v0(t,i*32,s*32)):e[i][s]==101?this.decoration.push(new w0(t,i*32,s*32)):e[i][s]==102?this.decoration.push(new C0(t,i*32,s*32)):e[i][s]==103?this.decoration.push(new S0(t,i*32,s*32)):e[i][s]==104&&this.decoration.push(new x0(t,i*32,s*32))}draw(t){this.skyBox.draw(t),this.background.forEach(e=>{e.draw(t)}),this.decoration.forEach(e=>{e.draw(t)})}drawBackground(t){this.background.forEach(e=>{e.draw(t)})}update(t){this.skyBox.update(t)}}function L(o,t){const e=w[0].length*32,i=w.length*32,s=new _({antialias:!1,height:window.innerHeight,width:window.innerWidth,backgroundColor:6327484});Z(s),document.querySelector("canvas").focus();const n=o,h=new r0(n,250,-100),a=new f0(n,w),u=new k0(i,e,n,w),P=new m0(n,w),J=function(c){h.update(),P.update(c,h.getPosition()),a.update(c),u.update(h.getPosition())},H=function(c){h.draw(c),a.animatedDraw(c),P.draw(c)},I=function(c){u.draw(c),u.drawBackground(c),a.staticDraw(c)},U=function(c,y){for(let d=0;d<a.getForeground().length;d++){const f=A(c.getCollisionData(),a.getForeground()[d].getCollisionData());f.collided&&(c.pushToColliderArray(f),a.getForeground()[d].getCollisionData().collisionProperties.includes("coin")&&(t.playCoinCollection(),a.getForeground()[d].pushToColliderArray(k(f,c.getCollisionData()))),a.getForeground()[d].getCollisionData().collisionProperties.includes("spring")&&a.getForeground()[d].pushToColliderArray(k(f,c.getCollisionData())));for(let x=0;x<y.length;x++){const V=A(y[x].getCollisionData(),a.getForeground()[d].getCollisionData());V.collided&&y[x].pushToColliderArray(V)}}for(let d=0;d<y.length;d++){const f=A(c.getCollisionData(),y[d].getCollisionData());f.collided&&(t.playHit(),c.pushToColliderArray(f),y[d].pushToColliderArray(k(f,c.getCollisionData())))}};I(s),s.ticker.add(()=>{s.stage.pivot.x=Q(h),s.stage.pivot.y=$(s,h,e),J(s),U(h,P.getControllers()),H(s),h.getShouldRemove()&&(s.destroy(!0),Y(!1,h.getScore(),n,t,()=>{L(n,t)})),h.getReachedGoal()&&(s.destroy(!0),Y(!0,h.getScore(),n,t,()=>{L(n,t)}))})}class D0{constructor(){r(this,"coinCollection");r(this,"hit");r(this,"soundtrack");this.coinCollection=new M.Howl({src:"../../assets/audio/coinSound.wav"}),this.hit=new M.Howl({src:"../../assets/audio/hit.wav"}),this.soundtrack=new M.Howl({src:"../../assets/audio/soundtrack.mp3",loop:!0})}playSoundTrack(){this.soundtrack.playing()||this.soundtrack.play()}playCoinCollection(){this.coinCollection.play()}playHit(){this.hit.playing()||this.hit.play()}}class R0{constructor(){r(this,"ghost");r(this,"coin");r(this,"mushroom");r(this,"slime");r(this,"cave");r(this,"skybox");r(this,"decoration");r(this,"earth");r(this,"areAssetsLoaded");this.areAssetsLoaded=!1,g.shared.add("../../assets/Ghost/ghost.json").add("../../assets/Coin/coin.json").add("../../assets/Mushroom/mushroom.json").add("../../assets/Slime/slime.json").add("../../assets/Cave/cave.json").add("../../assets/Skybox/skybox.json").add("../../assets/Decoration/decoration.json").add("../../assets/Earth/earth.json").load(()=>{this.ghost=g.shared.resources["../../assets/Ghost/ghost.json"].spritesheet,this.coin=g.shared.resources["../../assets/Coin/coin.json"].spritesheet,this.mushroom=g.shared.resources["../../assets/Mushroom/mushroom.json"].spritesheet,this.slime=g.shared.resources["../../assets/Slime/slime.json"].spritesheet,this.cave=g.shared.resources["../../assets/Cave/cave.json"].spritesheet,this.skybox=g.shared.resources["../../assets/Skybox/skybox.json"].spritesheet,this.decoration=g.shared.resources["../../assets/Decoration/decoration.json"].spritesheet,this.earth=g.shared.resources["../../assets/Earth/earth.json"].spritesheet,this.areAssetsLoaded=!0})}getGhost(){return this.ghost}getCoin(){return this.coin}getMushroom(){return this.mushroom}getSlime(){return this.slime}getCave(){return this.cave}getSkybox(){return this.skybox}getDecoration(){return this.decoration}getEarth(){return this.earth}getAreAssetsLoaded(){return this.areAssetsLoaded}}var L0="/assets/cartrage.2d359eb2.png";const V0=(o,t,e)=>{var n,h;const i=document.querySelector("body"),s=document.createElement("div");i.innerHTML="",s.innerHTML=`
        <div class="mainMenuWrapper">
            <div class="titleBox">
                <h1>Platformer</h1>
                <h3>By Brian Adams</h3>
                <img id="cartrage" alt="splash image">
            </div>
            <div class="buttonWrapper">
                <button id="playButton" class="arcadeBtn">Play</button>
            </div>
        </div>
    `,s.querySelector("#cartrage").src=L0,(n=s.querySelector("#playButton"))==null||n.addEventListener("click",()=>{o.getAreAssetsLoaded()&&(s.querySelector("#cartrage").style.animationName="dropDown",s.querySelector("#playButton").style.animationName="fadeOut",s.querySelector("#playButton").classList.add("remove-hover-pointer"),s.querySelector("#playButton").disabled=!0,t.playSoundTrack())}),(h=s.querySelector("#playButton"))==null||h.addEventListener("animationend",a=>{a.stopPropagation()}),s.querySelector("#cartrage").addEventListener("animationend",a=>{a.animationName==="dropDown"&&(e(o,t),s.querySelector(".mainMenuWrapper").style.animationName="fadeOut")}),s.querySelector(".mainMenuWrapper").addEventListener("animationend",a=>{a.animationName==="fadeOut"&&s.remove()}),i.appendChild(s)};K();const W=new R0,q=new D0;V0(W,q,()=>{L(W,q)});
